{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Hackathon\\\\eTabax\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ChefProjet\\\\ChantierForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { FaTimes, FaSearch, FaMapMarkerAlt, FaCheck } from 'react-icons/fa';\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n// import { toast } from 'react-toastify';\n// import L from 'leaflet';\n// import 'leaflet/dist/leaflet.css';\n// import { getClients, createChantier } from '../../../api/chefProjet';\n\n// // Correction pour les ic√¥nes Leaflet\n// delete L.Icon.Default.prototype._getIconUrl;\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n//   iconUrl: require('leaflet/dist/images/marker-icon.png'),\n//   shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n// });\n\n// const ChantierForm = ({ \n//   form, \n//   setForm, \n//   selectedLocation, \n//   setSelectedLocation, \n//   address, \n//   setAddress, \n//   useMap, \n//   setUseMap, \n//   onClose \n// }) => {\n//   const [clients, setClients] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedClient, setSelectedClient] = useState(null);\n//   const [isClientModalOpen, setIsClientModalOpen] = useState(false);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const clientsPerPage = 5;\n\n//   // Charger les clients depuis Firebase avec filtre r√¥le \"client\"\n//   useEffect(() => {\n//     const fetchClients = async () => {\n//       try {\n//         const data = await getClients();\n//         if (data.success) {\n//           setClients(data.users.filter(client => client.role === 'client') || []);\n//         } else {\n//           throw new Error(data.message || 'R√©ponse invalide du serveur');\n//         }\n//       } catch (error) {\n//         console.error('Erreur lors du chargement des clients:', error);\n//         toast.error(`Erreur lors du chargement des clients: ${error.message}`);\n//       }\n//     };\n//     fetchClients();\n//   }, []);\n\n//   // Mettre √† jour le formulaire uniquement si le client s√©lectionn√© change et si les champs ne sont pas d√©j√† mis √† jour\n//   useEffect(() => {\n//     if (selectedClient && (!form.proprietaireEmail || !form.proprietaireTelephone)) {\n//       if (selectedClient.email) {\n//         setForm(prevForm => ({ ...prevForm, proprietaireEmail: selectedClient.email, proprietaireTelephone: '' }));\n//       } else if (selectedClient.telephone) {\n//         setForm(prevForm => ({ ...prevForm, proprietaireTelephone: selectedClient.telephone, proprietaireEmail: '' }));\n//       }\n//     }\n//   }, [selectedClient, setForm, form.proprietaireEmail, form.proprietaireTelephone]);\n\n//   // Mettre √† jour la recherche en temps r√©el\n//   const handleClientSelect = (client) => {\n//     setSelectedClient(client);\n//     setIsClientModalOpen(false); // Ferme le modal apr√®s s√©lection\n//   };\n\n//   const filteredClients = clients.filter(client => \n//     (client.email && client.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\n//     (client.telephone && client.telephone.includes(searchTerm))\n//   );\n\n//   // Pagination\n//   const indexOfLastClient = currentPage * clientsPerPage;\n//   const indexOfFirstClient = indexOfLastClient - clientsPerPage;\n//   const currentClients = filteredClients.slice(indexOfFirstClient, indexOfLastClient);\n//   const totalPages = Math.ceil(filteredClients.length / clientsPerPage);\n\n//   const handlePageChange = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!form.nom || (!form.proprietaireEmail && !form.proprietaireTelephone)) {\n//       toast.error('Veuillez remplir le nom du chantier et s√©lectionner un client.');\n//       return;\n//     }\n\n//     try {\n//       // D√©bogage des donn√©es envoy√©es\n//       console.log('Donn√©es envoy√©es √† createChantier:', {\n//         nom: form.nom,\n//         proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\n//         localisation: useMap ? {\n//           latitude: selectedLocation[0],\n//           longitude: selectedLocation[1]\n//         } : { address: address || 'Adresse non sp√©cifi√©e' }\n//       });\n\n//       const chantierData = {\n//         nom: form.nom,\n//         proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\n//         geolocalisation: useMap\n//           ? {\n//               latitude: selectedLocation[0],\n//               longitude: selectedLocation[1]\n//             }\n//           : {\n//               address: address || 'Adresse non sp√©cifi√©e'\n//             }\n//       };\n\n//       await createChantier(chantierData);\n//       toast.success('Chantier cr√©√© avec succ√®s !');\n//       onClose();\n//     } catch (error) {\n//       console.error('Erreur lors de la cr√©ation du chantier:', error);\n//       toast.error(`Erreur lors de la cr√©ation du chantier: ${error.message}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"nouveau-chantier-overlay\">\n//       <div className=\"nouveau-chantier-container\">\n//         <div className=\"nouveau-chantier-header\">\n//           <h2>NOUVEAU PROJET</h2>\n//           <button className=\"close-btn\" onClick={onClose}>\n//             <FaTimes />\n//           </button>\n//         </div>\n\n//         <div className=\"nouveau-chantier-content\">\n//           <div className=\"form-section\">\n//             <form onSubmit={handleSubmit} className=\"chantier-form\">\n//               <div className=\"form-group\">\n//                 <label>Nom du Chantier *</label>\n//                 <input \n//                   type=\"text\" \n//                   value={form.nom} \n//                   onChange={(e) => setForm({ ...form, nom: e.target.value })} \n//                   placeholder=\"Ex: SOTRAC DISTRIBUTION\"\n//                   required \n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>Client</label>\n//                 <div className=\"client-search-section\">\n//                   <button \n//                     type=\"button\" \n//                     className=\"client-search-btn\"\n//                     onClick={() => setIsClientModalOpen(true)}\n//                   >\n//                     <FaSearch /> Rechercher un client\n//                   </button>\n//                   {selectedClient && (\n//                     <div className=\"selected-client\">\n//                       <span>{selectedClient.prenom} {selectedClient.nom} ({selectedClient.email || selectedClient.telephone})</span>\n//                       <button \n//                         className=\"clear-client-btn\"\n//                         onClick={() => {\n//                           setSelectedClient(null);\n//                           setForm({ ...form, proprietaireEmail: '', proprietaireTelephone: '' });\n//                         }}\n//                       >\n//                         <FaTimes />\n//                       </button>\n//                     </div>\n//                   )}\n//                 </div>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>Localisation du Chantier</label>\n//                 <div className=\"location-type-selector\">\n//                   <label className=\"radio-label\">\n//                     <input \n//                       type=\"radio\" \n//                       name=\"locationType\" \n//                       value=\"map\"\n//                       checked={useMap}\n//                       onChange={() => setUseMap(true)}\n//                     />\n//                     Utiliser la carte\n//                   </label>\n//                   <label className=\"radio-label\">\n//                     <input \n//                       type=\"radio\" \n//                       name=\"locationType\" \n//                       value=\"manual\"\n//                       checked={!useMap}\n//                       onChange={() => setUseMap(false)}\n//                     />\n//                     Saisie manuelle\n//                   </label>\n//                 </div>\n//               </div>\n\n//               {useMap ? (\n//                 <div className=\"form-group\">\n//                   <label>Emplacement s√©lectionn√©</label>\n//                   <input \n//                     type=\"text\" \n//                     value={address || `Lat: ${selectedLocation[0].toFixed(6)}, Lng: ${selectedLocation[1].toFixed(6)}`}\n//                     readOnly\n//                     placeholder=\"Cliquez sur la carte pour s√©lectionner l'emplacement\"\n//                     className=\"location-display\"\n//                   />\n//                 </div>\n//               ) : (\n//                 <div className=\"manual-location-section\">\n//                   <label>üìç Adresse du chantier</label>\n//                   <input \n//                     type=\"text\" \n//                     value={address}\n//                     onChange={(e) => setAddress(e.target.value)}\n//                     placeholder=\"Ex: Rue 10, Dakar, S√©n√©gal\"\n//                   />\n//                   <div className=\"info-text\">\n//                     üí° Saisissez l'adresse compl√®te du chantier pour faciliter la localisation\n//                   </div>\n//                 </div>\n//               )}\n\n//               <div style={{ marginTop: 'auto', paddingTop: '20px' }}>\n//                 <button type=\"submit\" className=\"create-btn\">\n//                   üöÄ Cr√©er le Chantier\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n\n//           {useMap ? (\n//             <div className=\"map-section\">\n//               <div className=\"map-header\">\n//                 <div className=\"search-container\">\n//                   <FaSearch className=\"search-icon\" />\n//                   <input \n//                     type=\"text\" \n//                     placeholder=\"Rechercher un lieu (ex: Dakar, S√©n√©gal)\" \n//                     className=\"search-input\"\n//                     onKeyPress={(e) => {\n//                       if (e.key === 'Enter') {\n//                         toast.info('Fonctionnalit√© de recherche en cours de d√©veloppement');\n//                       }\n//                     }}\n//                   />\n//                 </div>\n//                 <div className=\"map-info\">\n//                   <p><strong>Instructions :</strong></p>\n//                   <ul>\n//                     <li>Cliquez sur la carte pour s√©lectionner l'emplacement du chantier</li>\n//                     <li>Le marqueur jaune indique l'emplacement s√©lectionn√©</li>\n//                     <li>Vous pouvez zoomer/d√©zoomer avec les boutons + et -</li>\n//                   </ul>\n//                 </div>\n//               </div>\n\n//               <div className=\"map-container\">\n//                 <MapContainer \n//                   center={selectedLocation} \n//                   zoom={13} \n//                   style={{ height: '400px', width: '100%' }}\n//                   onClick={(e) => {\n//                     const newLocation = [e.latlng.lat, e.latlng.lng];\n//                     setSelectedLocation(newLocation);\n//                     setAddress(`Lat: ${newLocation[0].toFixed(6)}, Lng: ${newLocation[1].toFixed(6)}`);\n//                   }}\n//                   key={`map-${selectedLocation[0]}-${selectedLocation[1]}`}\n//                 >\n//                   <TileLayer\n//                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n//                   />\n//                   <Marker position={selectedLocation}>\n//                     <Popup>\n//                       <div>\n//                         <FaMapMarkerAlt style={{ color: '#f5b942' }} />\n//                         <strong>Emplacement du Chantier</strong>\n//                         <br />\n//                         Latitude: {selectedLocation[0].toFixed(6)}\n//                         <br />\n//                         Longitude: {selectedLocation[1].toFixed(6)}\n//                       </div>\n//                     </Popup>\n//                   </Marker>\n//                 </MapContainer>\n//               </div>\n//             </div>\n//           ) : (\n//             <div className=\"manual-location-info\">\n//               <div className=\"manual-location-section\">\n//                 <label>üó∫Ô∏è Mode Saisie Manuelle</label>\n//                 <div className=\"info-text\">\n//                   <p>‚úÖ Vous avez choisi la saisie manuelle de l'adresse</p>\n//                   <p>üìù L'adresse saisie sera utilis√©e pour localiser le chantier</p>\n//                   <p>üí° Vous pouvez toujours revenir √† la carte en changeant l'option ci-dessus</p>\n//                 </div>\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       {/* Modal de recherche de clients */}\n//       {isClientModalOpen && (\n//         <div className=\"client-search-overlay\">\n//           <div className=\"client-search-modal\">\n//             <div className=\"client-search-header\">\n//               <h3>Rechercher un Client</h3>\n//               <button \n//                 className=\"close-btn\" \n//                 onClick={() => setIsClientModalOpen(false)}\n//               >\n//                 <FaTimes />\n//               </button>\n//             </div>\n//             <div className=\"client-search-content\">\n//               <div className=\"search-input-container\">\n//                 <FaSearch className=\"search-icon\" />\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Entrez un email ou un t√©l√©phone (ex: user@example.com ou +221771234567)\"\n//                   value={searchTerm}\n//                   onChange={(e) => setSearchTerm(e.target.value)}\n//                   className=\"client-search-input\"\n//                 />\n//               </div>\n//               {currentClients.length > 0 ? (\n//                 <div className=\"clients-list\">\n//                   {currentClients.map((client) => (\n//                     <div \n//                       key={client.id} \n//                       className=\"client-item\"\n//                       onClick={() => handleClientSelect(client)}\n//                     >\n//                       <div className=\"client-info\">\n//                         <strong>{client.prenom} {client.nom}</strong>\n//                         <span>{client.email || client.telephone}</span>\n//                       </div>\n//                       <FaCheck className=\"view-icon\" />\n//                     </div>\n//                   ))}\n//                 </div>\n//               ) : (\n//                 searchTerm && (\n//                   <div className=\"no-clients\">\n//                     Aucun client trouv√© avec cet email ou ce t√©l√©phone\n//                   </div>\n//                 )\n//               )}\n//               {totalPages > 1 && (\n//                 <div className=\"pagination\">\n//                   {Array.from({ length: totalPages }, (_, index) => (\n//                     <button\n//                       key={index + 1}\n//                       className={`pagination-btn ${currentPage === index + 1 ? 'active' : ''}`}\n//                       onClick={() => handlePageChange(index + 1)}\n//                     >\n//                       {index + 1}\n//                     </button>\n//                   ))}\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default React.memo(ChantierForm);\nimport React, { useState, useEffect } from 'react';\nimport { FaTimes, FaSearch, FaMapMarkerAlt, FaCheck } from 'react-icons/fa';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { toast } from 'react-toastify';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport { getClients, createChantier } from '../../../api/chefProjet';\n\n// Correction pour les ic√¥nes Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst ChantierForm = ({\n  form,\n  setForm,\n  selectedLocation,\n  setSelectedLocation,\n  address,\n  setAddress,\n  useMap,\n  setUseMap,\n  onClose\n}) => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [isClientModalOpen, setIsClientModalOpen] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const clientsPerPage = 5;\n\n  // Charger les clients depuis Firebase avec filtre r√¥le \"client\"\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const data = await getClients();\n        if (data.success) {\n          setClients(data.users.filter(client => client.role === 'client') || []);\n        } else {\n          throw new Error(data.message || 'R√©ponse invalide du serveur');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des clients:', error);\n        toast.error(`Erreur lors du chargement des clients: ${error.message}`);\n      }\n    };\n    fetchClients();\n  }, []);\n\n  // Mettre √† jour le formulaire uniquement si le client s√©lectionn√© change et si les champs ne sont pas d√©j√† mis √† jour\n  useEffect(() => {\n    if (selectedClient && (!form.proprietaireEmail || !form.proprietaireTelephone)) {\n      if (selectedClient.email) {\n        setForm(prevForm => ({\n          ...prevForm,\n          proprietaireEmail: selectedClient.email,\n          proprietaireTelephone: ''\n        }));\n      } else if (selectedClient.telephone) {\n        setForm(prevForm => ({\n          ...prevForm,\n          proprietaireTelephone: selectedClient.telephone,\n          proprietaireEmail: ''\n        }));\n      }\n    }\n  }, [selectedClient, setForm, form.proprietaireEmail, form.proprietaireTelephone]);\n\n  // Mettre √† jour la recherche en temps r√©el\n  const handleClientSelect = client => {\n    setSelectedClient(client);\n    setIsClientModalOpen(false); // Ferme le modal apr√®s s√©lection\n  };\n  const filteredClients = clients.filter(client => client.email && client.email.toLowerCase().includes(searchTerm.toLowerCase()) || client.telephone && client.telephone.includes(searchTerm));\n\n  // Pagination\n  const indexOfLastClient = currentPage * clientsPerPage;\n  const indexOfFirstClient = indexOfLastClient - clientsPerPage;\n  const currentClients = filteredClients.slice(indexOfFirstClient, indexOfLastClient);\n  const totalPages = Math.ceil(filteredClients.length / clientsPerPage);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Fonction pour obtenir l'adresse √† partir des coordonn√©es via Nominatim\n  const getAddressFromCoords = async (lat, lng) => {\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=18&addressdetails=1`);\n      const data = response.data;\n      if (data && data.display_name) {\n        setAddress(data.display_name);\n      } else {\n        setAddress('Adresse non trouv√©e');\n      }\n    } catch (error) {\n      console.error('Erreur lors du g√©ocodage inverse:', error);\n      setAddress('Erreur lors de la r√©cup√©ration de l\\'adresse');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.nom || !form.proprietaireEmail && !form.proprietaireTelephone) {\n      toast.error('Veuillez remplir le nom du chantier et s√©lectionner un client.');\n      return;\n    }\n    try {\n      // D√©bogage des donn√©es envoy√©es\n      console.log('Donn√©es envoy√©es √† createChantier:', {\n        nom: form.nom,\n        proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\n        geolocalisation: {\n          address: address || 'Adresse non sp√©cifi√©e'\n        }\n      });\n      const chantierData = {\n        nom: form.nom,\n        proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\n        geolocalisation: {\n          address: address || 'Adresse non sp√©cifi√©e'\n        }\n      };\n      await createChantier(chantierData);\n      toast.success('Chantier cr√©√© avec succ√®s !');\n      onClose();\n    } catch (error) {\n      console.error('Erreur lors de la cr√©ation du chantier:', error);\n      toast.error(`Erreur lors de la cr√©ation du chantier: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nouveau-chantier-overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nouveau-chantier-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nouveau-chantier-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"NOUVEAU PROJET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nouveau-chantier-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"chantier-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nom du Chantier *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: form.nom,\n                onChange: e => setForm({\n                  ...form,\n                  nom: e.target.value\n                }),\n                placeholder: \"Ex: SOTRAC DISTRIBUTION\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"client-search-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"client-search-btn\",\n                  onClick: () => setIsClientModalOpen(true),\n                  children: [/*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 21\n                  }, this), \" Rechercher un client\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 19\n                }, this), selectedClient && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"selected-client\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [selectedClient.prenom, \" \", selectedClient.nom, \" (\", selectedClient.email || selectedClient.telephone, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"clear-client-btn\",\n                    onClick: () => {\n                      setSelectedClient(null);\n                      setForm({\n                        ...form,\n                        proprietaireEmail: '',\n                        proprietaireTelephone: ''\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Localisation du Chantier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"location-type-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"locationType\",\n                    value: \"map\",\n                    checked: useMap,\n                    onChange: () => setUseMap(true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 21\n                  }, this), \"Utiliser la carte\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"radio-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    name: \"locationType\",\n                    value: \"manual\",\n                    checked: !useMap,\n                    onChange: () => setUseMap(false)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 21\n                  }, this), \"Saisie manuelle\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), useMap ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Emplacement s\\xE9lectionn\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: address || 'Choisissez un emplacement sur la carte',\n                readOnly: true,\n                placeholder: \"Choisissez un emplacement sur la carte\",\n                className: \"location-display\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"manual-location-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83D\\uDCCD Adresse du chantier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: address,\n                onChange: e => setAddress(e.target.value),\n                placeholder: \"Ex: Rue 10, Dakar, S\\xE9n\\xE9gal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-text\",\n                children: \"\\uD83D\\uDCA1 Saisissez l'adresse compl\\xE8te du chantier pour faciliter la localisation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 'auto',\n                paddingTop: '20px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"create-btn\",\n                children: \"\\uD83D\\uDE80 Cr\\xE9er le Chantier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), useMap && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-container\",\n              children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n                className: \"search-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Rechercher un lieu (ex: Dakar, S\\xE9n\\xE9gal)\",\n                className: \"search-input\",\n                onKeyPress: e => {\n                  if (e.key === 'Enter') {\n                    toast.info('Fonctionnalit√© de recherche en cours de d√©veloppement');\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Instructions :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"D\\xE9placez le marqueur bleu pour s\\xE9lectionner l'emplacement du chantier\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"L'adresse sera mise \\xE0 jour automatiquement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Vous pouvez zoomer/d\\xE9zoomer avec les boutons + et -\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              center: selectedLocation,\n              zoom: 13,\n              style: {\n                height: '400px',\n                width: '100%'\n              },\n              onClick: e => {\n                const {\n                  lat,\n                  lng\n                } = e.latlng;\n                setSelectedLocation([lat, lng]);\n                getAddressFromCoords(lat, lng);\n              },\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n                attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Marker, {\n                position: selectedLocation,\n                draggable: true,\n                eventHandlers: {\n                  dragend: e => {\n                    const {\n                      lat,\n                      lng\n                    } = e.target.getLatLng();\n                    setSelectedLocation([lat, lng]);\n                    getAddressFromCoords(lat, lng);\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n                      style: {\n                        color: '#f5b942'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Emplacement du Chantier\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 676,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 25\n                    }, this), \"Adresse: \", address || 'Chargement...']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), isClientModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-search-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"client-search-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"client-search-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Rechercher un Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setIsClientModalOpen(false),\n            children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"client-search-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n              className: \"search-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Entrez un email ou un t\\xE9l\\xE9phone (ex: user@example.com ou +221771234567)\",\n              value: searchTerm,\n              onChange: e => setSearchTerm(e.target.value),\n              className: \"client-search-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), currentClients.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"clients-list\",\n            children: currentClients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"client-item\",\n              onClick: () => handleClientSelect(client),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"client-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [client.prenom, \" \", client.nom]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: client.email || client.telephone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(FaCheck, {\n                className: \"view-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 23\n              }, this)]\n            }, client.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 17\n          }, this) : searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-clients\",\n            children: \"Aucun client trouv\\xE9 avec cet email ou ce t\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 19\n          }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: Array.from({\n              length: totalPages\n            }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `pagination-btn ${currentPage === index + 1 ? 'active' : ''}`,\n              onClick: () => handlePageChange(index + 1),\n              children: index + 1\n            }, index + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 511,\n    columnNumber: 5\n  }, this);\n};\n_s(ChantierForm, \"z6BnzkO6+jEfnnRlUq/GsIKUMXE=\");\n_c = ChantierForm;\nexport default _c2 = /*#__PURE__*/React.memo(ChantierForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"ChantierForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","FaTimes","FaSearch","FaMapMarkerAlt","FaCheck","MapContainer","TileLayer","Marker","Popup","toast","L","axios","getClients","createChantier","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","ChantierForm","form","setForm","selectedLocation","setSelectedLocation","address","setAddress","useMap","setUseMap","onClose","_s","clients","setClients","searchTerm","setSearchTerm","selectedClient","setSelectedClient","isClientModalOpen","setIsClientModalOpen","currentPage","setCurrentPage","clientsPerPage","fetchClients","data","success","users","filter","client","role","Error","message","error","console","proprietaireEmail","proprietaireTelephone","email","prevForm","telephone","handleClientSelect","filteredClients","toLowerCase","includes","indexOfLastClient","indexOfFirstClient","currentClients","slice","totalPages","Math","ceil","length","handlePageChange","pageNumber","getAddressFromCoords","lat","lng","response","get","display_name","handleSubmit","e","preventDefault","nom","log","proprietaireEmailOrTel","geolocalisation","chantierData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","required","prenom","name","checked","readOnly","style","marginTop","paddingTop","onKeyPress","key","info","center","zoom","height","width","latlng","url","attribution","position","draggable","eventHandlers","dragend","getLatLng","color","map","id","Array","from","_","index","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Hackathon/eTabax/frontend/src/components/Dashboard/ChefProjet/ChantierForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { FaTimes, FaSearch, FaMapMarkerAlt, FaCheck } from 'react-icons/fa';\r\n// import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\n// import { toast } from 'react-toastify';\r\n// import L from 'leaflet';\r\n// import 'leaflet/dist/leaflet.css';\r\n// import { getClients, createChantier } from '../../../api/chefProjet';\r\n\r\n// // Correction pour les ic√¥nes Leaflet\r\n// delete L.Icon.Default.prototype._getIconUrl;\r\n// L.Icon.Default.mergeOptions({\r\n//   iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n//   iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n//   shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n// });\r\n\r\n// const ChantierForm = ({ \r\n//   form, \r\n//   setForm, \r\n//   selectedLocation, \r\n//   setSelectedLocation, \r\n//   address, \r\n//   setAddress, \r\n//   useMap, \r\n//   setUseMap, \r\n//   onClose \r\n// }) => {\r\n//   const [clients, setClients] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [selectedClient, setSelectedClient] = useState(null);\r\n//   const [isClientModalOpen, setIsClientModalOpen] = useState(false);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const clientsPerPage = 5;\r\n\r\n//   // Charger les clients depuis Firebase avec filtre r√¥le \"client\"\r\n//   useEffect(() => {\r\n//     const fetchClients = async () => {\r\n//       try {\r\n//         const data = await getClients();\r\n//         if (data.success) {\r\n//           setClients(data.users.filter(client => client.role === 'client') || []);\r\n//         } else {\r\n//           throw new Error(data.message || 'R√©ponse invalide du serveur');\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Erreur lors du chargement des clients:', error);\r\n//         toast.error(`Erreur lors du chargement des clients: ${error.message}`);\r\n//       }\r\n//     };\r\n//     fetchClients();\r\n//   }, []);\r\n\r\n//   // Mettre √† jour le formulaire uniquement si le client s√©lectionn√© change et si les champs ne sont pas d√©j√† mis √† jour\r\n//   useEffect(() => {\r\n//     if (selectedClient && (!form.proprietaireEmail || !form.proprietaireTelephone)) {\r\n//       if (selectedClient.email) {\r\n//         setForm(prevForm => ({ ...prevForm, proprietaireEmail: selectedClient.email, proprietaireTelephone: '' }));\r\n//       } else if (selectedClient.telephone) {\r\n//         setForm(prevForm => ({ ...prevForm, proprietaireTelephone: selectedClient.telephone, proprietaireEmail: '' }));\r\n//       }\r\n//     }\r\n//   }, [selectedClient, setForm, form.proprietaireEmail, form.proprietaireTelephone]);\r\n\r\n//   // Mettre √† jour la recherche en temps r√©el\r\n//   const handleClientSelect = (client) => {\r\n//     setSelectedClient(client);\r\n//     setIsClientModalOpen(false); // Ferme le modal apr√®s s√©lection\r\n//   };\r\n\r\n//   const filteredClients = clients.filter(client => \r\n//     (client.email && client.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n//     (client.telephone && client.telephone.includes(searchTerm))\r\n//   );\r\n\r\n//   // Pagination\r\n//   const indexOfLastClient = currentPage * clientsPerPage;\r\n//   const indexOfFirstClient = indexOfLastClient - clientsPerPage;\r\n//   const currentClients = filteredClients.slice(indexOfFirstClient, indexOfLastClient);\r\n//   const totalPages = Math.ceil(filteredClients.length / clientsPerPage);\r\n\r\n//   const handlePageChange = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!form.nom || (!form.proprietaireEmail && !form.proprietaireTelephone)) {\r\n//       toast.error('Veuillez remplir le nom du chantier et s√©lectionner un client.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // D√©bogage des donn√©es envoy√©es\r\n//       console.log('Donn√©es envoy√©es √† createChantier:', {\r\n//         nom: form.nom,\r\n//         proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\r\n//         localisation: useMap ? {\r\n//           latitude: selectedLocation[0],\r\n//           longitude: selectedLocation[1]\r\n//         } : { address: address || 'Adresse non sp√©cifi√©e' }\r\n//       });\r\n\r\n//       const chantierData = {\r\n//         nom: form.nom,\r\n//         proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\r\n//         geolocalisation: useMap\r\n//           ? {\r\n//               latitude: selectedLocation[0],\r\n//               longitude: selectedLocation[1]\r\n//             }\r\n//           : {\r\n//               address: address || 'Adresse non sp√©cifi√©e'\r\n//             }\r\n//       };\r\n\r\n//       await createChantier(chantierData);\r\n//       toast.success('Chantier cr√©√© avec succ√®s !');\r\n//       onClose();\r\n//     } catch (error) {\r\n//       console.error('Erreur lors de la cr√©ation du chantier:', error);\r\n//       toast.error(`Erreur lors de la cr√©ation du chantier: ${error.message}`);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"nouveau-chantier-overlay\">\r\n//       <div className=\"nouveau-chantier-container\">\r\n//         <div className=\"nouveau-chantier-header\">\r\n//           <h2>NOUVEAU PROJET</h2>\r\n//           <button className=\"close-btn\" onClick={onClose}>\r\n//             <FaTimes />\r\n//           </button>\r\n//         </div>\r\n        \r\n//         <div className=\"nouveau-chantier-content\">\r\n//           <div className=\"form-section\">\r\n//             <form onSubmit={handleSubmit} className=\"chantier-form\">\r\n//               <div className=\"form-group\">\r\n//                 <label>Nom du Chantier *</label>\r\n//                 <input \r\n//                   type=\"text\" \r\n//                   value={form.nom} \r\n//                   onChange={(e) => setForm({ ...form, nom: e.target.value })} \r\n//                   placeholder=\"Ex: SOTRAC DISTRIBUTION\"\r\n//                   required \r\n//                 />\r\n//               </div>\r\n              \r\n//               <div className=\"form-group\">\r\n//                 <label>Client</label>\r\n//                 <div className=\"client-search-section\">\r\n//                   <button \r\n//                     type=\"button\" \r\n//                     className=\"client-search-btn\"\r\n//                     onClick={() => setIsClientModalOpen(true)}\r\n//                   >\r\n//                     <FaSearch /> Rechercher un client\r\n//                   </button>\r\n//                   {selectedClient && (\r\n//                     <div className=\"selected-client\">\r\n//                       <span>{selectedClient.prenom} {selectedClient.nom} ({selectedClient.email || selectedClient.telephone})</span>\r\n//                       <button \r\n//                         className=\"clear-client-btn\"\r\n//                         onClick={() => {\r\n//                           setSelectedClient(null);\r\n//                           setForm({ ...form, proprietaireEmail: '', proprietaireTelephone: '' });\r\n//                         }}\r\n//                       >\r\n//                         <FaTimes />\r\n//                       </button>\r\n//                     </div>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"form-group\">\r\n//                 <label>Localisation du Chantier</label>\r\n//                 <div className=\"location-type-selector\">\r\n//                   <label className=\"radio-label\">\r\n//                     <input \r\n//                       type=\"radio\" \r\n//                       name=\"locationType\" \r\n//                       value=\"map\"\r\n//                       checked={useMap}\r\n//                       onChange={() => setUseMap(true)}\r\n//                     />\r\n//                     Utiliser la carte\r\n//                   </label>\r\n//                   <label className=\"radio-label\">\r\n//                     <input \r\n//                       type=\"radio\" \r\n//                       name=\"locationType\" \r\n//                       value=\"manual\"\r\n//                       checked={!useMap}\r\n//                       onChange={() => setUseMap(false)}\r\n//                     />\r\n//                     Saisie manuelle\r\n//                   </label>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               {useMap ? (\r\n//                 <div className=\"form-group\">\r\n//                   <label>Emplacement s√©lectionn√©</label>\r\n//                   <input \r\n//                     type=\"text\" \r\n//                     value={address || `Lat: ${selectedLocation[0].toFixed(6)}, Lng: ${selectedLocation[1].toFixed(6)}`}\r\n//                     readOnly\r\n//                     placeholder=\"Cliquez sur la carte pour s√©lectionner l'emplacement\"\r\n//                     className=\"location-display\"\r\n//                   />\r\n//                 </div>\r\n//               ) : (\r\n//                 <div className=\"manual-location-section\">\r\n//                   <label>üìç Adresse du chantier</label>\r\n//                   <input \r\n//                     type=\"text\" \r\n//                     value={address}\r\n//                     onChange={(e) => setAddress(e.target.value)}\r\n//                     placeholder=\"Ex: Rue 10, Dakar, S√©n√©gal\"\r\n//                   />\r\n//                   <div className=\"info-text\">\r\n//                     üí° Saisissez l'adresse compl√®te du chantier pour faciliter la localisation\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n              \r\n//               <div style={{ marginTop: 'auto', paddingTop: '20px' }}>\r\n//                 <button type=\"submit\" className=\"create-btn\">\r\n//                   üöÄ Cr√©er le Chantier\r\n//                 </button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n          \r\n//           {useMap ? (\r\n//             <div className=\"map-section\">\r\n//               <div className=\"map-header\">\r\n//                 <div className=\"search-container\">\r\n//                   <FaSearch className=\"search-icon\" />\r\n//                   <input \r\n//                     type=\"text\" \r\n//                     placeholder=\"Rechercher un lieu (ex: Dakar, S√©n√©gal)\" \r\n//                     className=\"search-input\"\r\n//                     onKeyPress={(e) => {\r\n//                       if (e.key === 'Enter') {\r\n//                         toast.info('Fonctionnalit√© de recherche en cours de d√©veloppement');\r\n//                       }\r\n//                     }}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"map-info\">\r\n//                   <p><strong>Instructions :</strong></p>\r\n//                   <ul>\r\n//                     <li>Cliquez sur la carte pour s√©lectionner l'emplacement du chantier</li>\r\n//                     <li>Le marqueur jaune indique l'emplacement s√©lectionn√©</li>\r\n//                     <li>Vous pouvez zoomer/d√©zoomer avec les boutons + et -</li>\r\n//                   </ul>\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <div className=\"map-container\">\r\n//                 <MapContainer \r\n//                   center={selectedLocation} \r\n//                   zoom={13} \r\n//                   style={{ height: '400px', width: '100%' }}\r\n//                   onClick={(e) => {\r\n//                     const newLocation = [e.latlng.lat, e.latlng.lng];\r\n//                     setSelectedLocation(newLocation);\r\n//                     setAddress(`Lat: ${newLocation[0].toFixed(6)}, Lng: ${newLocation[1].toFixed(6)}`);\r\n//                   }}\r\n//                   key={`map-${selectedLocation[0]}-${selectedLocation[1]}`}\r\n//                 >\r\n//                   <TileLayer\r\n//                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//                     attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n//                   />\r\n//                   <Marker position={selectedLocation}>\r\n//                     <Popup>\r\n//                       <div>\r\n//                         <FaMapMarkerAlt style={{ color: '#f5b942' }} />\r\n//                         <strong>Emplacement du Chantier</strong>\r\n//                         <br />\r\n//                         Latitude: {selectedLocation[0].toFixed(6)}\r\n//                         <br />\r\n//                         Longitude: {selectedLocation[1].toFixed(6)}\r\n//                       </div>\r\n//                     </Popup>\r\n//                   </Marker>\r\n//                 </MapContainer>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <div className=\"manual-location-info\">\r\n//               <div className=\"manual-location-section\">\r\n//                 <label>üó∫Ô∏è Mode Saisie Manuelle</label>\r\n//                 <div className=\"info-text\">\r\n//                   <p>‚úÖ Vous avez choisi la saisie manuelle de l'adresse</p>\r\n//                   <p>üìù L'adresse saisie sera utilis√©e pour localiser le chantier</p>\r\n//                   <p>üí° Vous pouvez toujours revenir √† la carte en changeant l'option ci-dessus</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Modal de recherche de clients */}\r\n//       {isClientModalOpen && (\r\n//         <div className=\"client-search-overlay\">\r\n//           <div className=\"client-search-modal\">\r\n//             <div className=\"client-search-header\">\r\n//               <h3>Rechercher un Client</h3>\r\n//               <button \r\n//                 className=\"close-btn\" \r\n//                 onClick={() => setIsClientModalOpen(false)}\r\n//               >\r\n//                 <FaTimes />\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"client-search-content\">\r\n//               <div className=\"search-input-container\">\r\n//                 <FaSearch className=\"search-icon\" />\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Entrez un email ou un t√©l√©phone (ex: user@example.com ou +221771234567)\"\r\n//                   value={searchTerm}\r\n//                   onChange={(e) => setSearchTerm(e.target.value)}\r\n//                   className=\"client-search-input\"\r\n//                 />\r\n//               </div>\r\n//               {currentClients.length > 0 ? (\r\n//                 <div className=\"clients-list\">\r\n//                   {currentClients.map((client) => (\r\n//                     <div \r\n//                       key={client.id} \r\n//                       className=\"client-item\"\r\n//                       onClick={() => handleClientSelect(client)}\r\n//                     >\r\n//                       <div className=\"client-info\">\r\n//                         <strong>{client.prenom} {client.nom}</strong>\r\n//                         <span>{client.email || client.telephone}</span>\r\n//                       </div>\r\n//                       <FaCheck className=\"view-icon\" />\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n//               ) : (\r\n//                 searchTerm && (\r\n//                   <div className=\"no-clients\">\r\n//                     Aucun client trouv√© avec cet email ou ce t√©l√©phone\r\n//                   </div>\r\n//                 )\r\n//               )}\r\n//               {totalPages > 1 && (\r\n//                 <div className=\"pagination\">\r\n//                   {Array.from({ length: totalPages }, (_, index) => (\r\n//                     <button\r\n//                       key={index + 1}\r\n//                       className={`pagination-btn ${currentPage === index + 1 ? 'active' : ''}`}\r\n//                       onClick={() => handlePageChange(index + 1)}\r\n//                     >\r\n//                       {index + 1}\r\n//                     </button>\r\n//                   ))}\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default React.memo(ChantierForm);\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaTimes, FaSearch, FaMapMarkerAlt, FaCheck } from 'react-icons/fa';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { toast } from 'react-toastify';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\nimport { getClients, createChantier } from '../../../api/chefProjet';\r\n\r\n// Correction pour les ic√¥nes Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst ChantierForm = ({ \r\n  form, \r\n  setForm, \r\n  selectedLocation, \r\n  setSelectedLocation, \r\n  address, \r\n  setAddress, \r\n  useMap, \r\n  setUseMap, \r\n  onClose \r\n}) => {\r\n  const [clients, setClients] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n  const [isClientModalOpen, setIsClientModalOpen] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const clientsPerPage = 5;\r\n\r\n  // Charger les clients depuis Firebase avec filtre r√¥le \"client\"\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        const data = await getClients();\r\n        if (data.success) {\r\n          setClients(data.users.filter(client => client.role === 'client') || []);\r\n        } else {\r\n          throw new Error(data.message || 'R√©ponse invalide du serveur');\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors du chargement des clients:', error);\r\n        toast.error(`Erreur lors du chargement des clients: ${error.message}`);\r\n      }\r\n    };\r\n    fetchClients();\r\n  }, []);\r\n\r\n  // Mettre √† jour le formulaire uniquement si le client s√©lectionn√© change et si les champs ne sont pas d√©j√† mis √† jour\r\n  useEffect(() => {\r\n    if (selectedClient && (!form.proprietaireEmail || !form.proprietaireTelephone)) {\r\n      if (selectedClient.email) {\r\n        setForm(prevForm => ({ ...prevForm, proprietaireEmail: selectedClient.email, proprietaireTelephone: '' }));\r\n      } else if (selectedClient.telephone) {\r\n        setForm(prevForm => ({ ...prevForm, proprietaireTelephone: selectedClient.telephone, proprietaireEmail: '' }));\r\n      }\r\n    }\r\n  }, [selectedClient, setForm, form.proprietaireEmail, form.proprietaireTelephone]);\r\n\r\n  // Mettre √† jour la recherche en temps r√©el\r\n  const handleClientSelect = (client) => {\r\n    setSelectedClient(client);\r\n    setIsClientModalOpen(false); // Ferme le modal apr√®s s√©lection\r\n  };\r\n\r\n  const filteredClients = clients.filter(client => \r\n    (client.email && client.email.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n    (client.telephone && client.telephone.includes(searchTerm))\r\n  );\r\n\r\n  // Pagination\r\n  const indexOfLastClient = currentPage * clientsPerPage;\r\n  const indexOfFirstClient = indexOfLastClient - clientsPerPage;\r\n  const currentClients = filteredClients.slice(indexOfFirstClient, indexOfLastClient);\r\n  const totalPages = Math.ceil(filteredClients.length / clientsPerPage);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Fonction pour obtenir l'adresse √† partir des coordonn√©es via Nominatim\r\n  const getAddressFromCoords = async (lat, lng) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&zoom=18&addressdetails=1`\r\n      );\r\n      const data = response.data;\r\n      if (data && data.display_name) {\r\n        setAddress(data.display_name);\r\n      } else {\r\n        setAddress('Adresse non trouv√©e');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du g√©ocodage inverse:', error);\r\n      setAddress('Erreur lors de la r√©cup√©ration de l\\'adresse');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.nom || (!form.proprietaireEmail && !form.proprietaireTelephone)) {\r\n      toast.error('Veuillez remplir le nom du chantier et s√©lectionner un client.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // D√©bogage des donn√©es envoy√©es\r\n      console.log('Donn√©es envoy√©es √† createChantier:', {\r\n        nom: form.nom,\r\n        proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\r\n        geolocalisation: { address: address || 'Adresse non sp√©cifi√©e' }\r\n      });\r\n\r\n      const chantierData = {\r\n        nom: form.nom,\r\n        proprietaireEmailOrTel: form.proprietaireEmail || form.proprietaireTelephone,\r\n        geolocalisation: { address: address || 'Adresse non sp√©cifi√©e' }\r\n      };\r\n\r\n      await createChantier(chantierData);\r\n      toast.success('Chantier cr√©√© avec succ√®s !');\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Erreur lors de la cr√©ation du chantier:', error);\r\n      toast.error(`Erreur lors de la cr√©ation du chantier: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nouveau-chantier-overlay\">\r\n      <div className=\"nouveau-chantier-container\">\r\n        <div className=\"nouveau-chantier-header\">\r\n          <h2>NOUVEAU PROJET</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"nouveau-chantier-content\">\r\n          <div className=\"form-section\">\r\n            <form onSubmit={handleSubmit} className=\"chantier-form\">\r\n              <div className=\"form-group\">\r\n                <label>Nom du Chantier *</label>\r\n                <input \r\n                  type=\"text\" \r\n                  value={form.nom} \r\n                  onChange={(e) => setForm({ ...form, nom: e.target.value })} \r\n                  placeholder=\"Ex: SOTRAC DISTRIBUTION\"\r\n                  required \r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label>Client</label>\r\n                <div className=\"client-search-section\">\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"client-search-btn\"\r\n                    onClick={() => setIsClientModalOpen(true)}\r\n                  >\r\n                    <FaSearch /> Rechercher un client\r\n                  </button>\r\n                  {selectedClient && (\r\n                    <div className=\"selected-client\">\r\n                      <span>{selectedClient.prenom} {selectedClient.nom} ({selectedClient.email || selectedClient.telephone})</span>\r\n                      <button \r\n                        className=\"clear-client-btn\"\r\n                        onClick={() => {\r\n                          setSelectedClient(null);\r\n                          setForm({ ...form, proprietaireEmail: '', proprietaireTelephone: '' });\r\n                        }}\r\n                      >\r\n                        <FaTimes />\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label>Localisation du Chantier</label>\r\n                <div className=\"location-type-selector\">\r\n                  <label className=\"radio-label\">\r\n                    <input \r\n                      type=\"radio\" \r\n                      name=\"locationType\" \r\n                      value=\"map\"\r\n                      checked={useMap}\r\n                      onChange={() => setUseMap(true)}\r\n                    />\r\n                    Utiliser la carte\r\n                  </label>\r\n                  <label className=\"radio-label\">\r\n                    <input \r\n                      type=\"radio\" \r\n                      name=\"locationType\" \r\n                      value=\"manual\"\r\n                      checked={!useMap}\r\n                      onChange={() => setUseMap(false)}\r\n                    />\r\n                    Saisie manuelle\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              \r\n              {useMap ? (\r\n                <div className=\"form-group\">\r\n                  <label>Emplacement s√©lectionn√©</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={address || 'Choisissez un emplacement sur la carte'}\r\n                    readOnly\r\n                    placeholder=\"Choisissez un emplacement sur la carte\"\r\n                    className=\"location-display\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"manual-location-section\">\r\n                  <label>üìç Adresse du chantier</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Ex: Rue 10, Dakar, S√©n√©gal\"\r\n                  />\r\n                  <div className=\"info-text\">\r\n                    üí° Saisissez l'adresse compl√®te du chantier pour faciliter la localisation\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              <div style={{ marginTop: 'auto', paddingTop: '20px' }}>\r\n                <button type=\"submit\" className=\"create-btn\">\r\n                  üöÄ Cr√©er le Chantier\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          \r\n          {useMap && (\r\n            <div className=\"map-section\">\r\n              <div className=\"map-header\">\r\n                <div className=\"search-container\">\r\n                  <FaSearch className=\"search-icon\" />\r\n                  <input \r\n                    type=\"text\" \r\n                    placeholder=\"Rechercher un lieu (ex: Dakar, S√©n√©gal)\" \r\n                    className=\"search-input\"\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        toast.info('Fonctionnalit√© de recherche en cours de d√©veloppement');\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"map-info\">\r\n                  <p><strong>Instructions :</strong></p>\r\n                  <ul>\r\n                    <li>D√©placez le marqueur bleu pour s√©lectionner l'emplacement du chantier</li>\r\n                    <li>L'adresse sera mise √† jour automatiquement</li>\r\n                    <li>Vous pouvez zoomer/d√©zoomer avec les boutons + et -</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"map-container\">\r\n                <MapContainer \r\n                  center={selectedLocation} \r\n                  zoom={13} \r\n                  style={{ height: '400px', width: '100%' }}\r\n                  onClick={(e) => {\r\n                    const { lat, lng } = e.latlng;\r\n                    setSelectedLocation([lat, lng]);\r\n                    getAddressFromCoords(lat, lng);\r\n                  }}\r\n                >\r\n                  <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                  />\r\n                  <Marker\r\n                    position={selectedLocation}\r\n                    draggable={true}\r\n                    eventHandlers={{\r\n                      dragend: (e) => {\r\n                        const { lat, lng } = e.target.getLatLng();\r\n                        setSelectedLocation([lat, lng]);\r\n                        getAddressFromCoords(lat, lng);\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Popup>\r\n                      <div>\r\n                        <FaMapMarkerAlt style={{ color: '#f5b942' }} />\r\n                        <strong>Emplacement du Chantier</strong>\r\n                        <br />\r\n                        Adresse: {address || 'Chargement...'}\r\n                      </div>\r\n                    </Popup>\r\n                  </Marker>\r\n                </MapContainer>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de recherche de clients */}\r\n      {isClientModalOpen && (\r\n        <div className=\"client-search-overlay\">\r\n          <div className=\"client-search-modal\">\r\n            <div className=\"client-search-header\">\r\n              <h3>Rechercher un Client</h3>\r\n              <button \r\n                className=\"close-btn\" \r\n                onClick={() => setIsClientModalOpen(false)}\r\n              >\r\n                <FaTimes />\r\n              </button>\r\n            </div>\r\n            <div className=\"client-search-content\">\r\n              <div className=\"search-input-container\">\r\n                <FaSearch className=\"search-icon\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Entrez un email ou un t√©l√©phone (ex: user@example.com ou +221771234567)\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"client-search-input\"\r\n                />\r\n              </div>\r\n              {currentClients.length > 0 ? (\r\n                <div className=\"clients-list\">\r\n                  {currentClients.map((client) => (\r\n                    <div \r\n                      key={client.id} \r\n                      className=\"client-item\"\r\n                      onClick={() => handleClientSelect(client)}\r\n                    >\r\n                      <div className=\"client-info\">\r\n                        <strong>{client.prenom} {client.nom}</strong>\r\n                        <span>{client.email || client.telephone}</span>\r\n                      </div>\r\n                      <FaCheck className=\"view-icon\" />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                searchTerm && (\r\n                  <div className=\"no-clients\">\r\n                    Aucun client trouv√© avec cet email ou ce t√©l√©phone\r\n                  </div>\r\n                )\r\n              )}\r\n              {totalPages > 1 && (\r\n                <div className=\"pagination\">\r\n                  {Array.from({ length: totalPages }, (_, index) => (\r\n                    <button\r\n                      key={index + 1}\r\n                      className={`pagination-btn ${currentPage === index + 1 ? 'active' : ''}`}\r\n                      onClick={() => handlePageChange(index + 1)}\r\n                    >\r\n                      {index + 1}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChantierForm);"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}