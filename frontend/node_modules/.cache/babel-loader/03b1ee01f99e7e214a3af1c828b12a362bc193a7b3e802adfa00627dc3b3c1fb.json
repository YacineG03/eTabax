{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Hackathon\\\\eTabax\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ChefChantier\\\\MeteoPlanning.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport chefChantierAPI from '../../../api/chefChantier';\nimport './MeteoPlanning.css'; // Tu peux le créer pour un peu de style\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MeteoPlanning() {\n  _s();\n  var _meteo$weather, _meteo$weather2, _meteo$weather3, _meteo$weather4;\n  const [ville, setVille] = useState('Dakar');\n  const [meteo, setMeteo] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Obtenir la position de l'utilisateur au démarrage\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const {\n          latitude,\n          longitude\n        } = pos.coords;\n        fetchVilleParCoordonnees(latitude, longitude);\n      }, () => {\n        toast.warn(\"Impossible d'accéder à la localisation. Ville par défaut : Dakar\");\n        fetchMeteo('Dakar');\n      });\n    } else {\n      toast.warn(\"Géolocalisation non supportée. Ville par défaut : Dakar\");\n      fetchMeteo('Dakar');\n    }\n  }, []);\n  const fetchVilleParCoordonnees = async (lat, lon) => {\n    try {\n      var _data$address, _data$address2;\n      // Appel à une API tierce pour convertir coord => ville\n      const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`);\n      const data = await res.json();\n      const villeDetectee = (data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.city) || (data === null || data === void 0 ? void 0 : (_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : _data$address2.town) || 'Dakar';\n      setVille(villeDetectee);\n      fetchMeteo(villeDetectee);\n    } catch (err) {\n      toast.error(\"Erreur localisation. Ville par défaut utilisée.\");\n      fetchMeteo('Dakar');\n    }\n  };\n  const fetchMeteo = async villeChoisie => {\n    setLoading(true);\n    try {\n      const data = await chefChantierAPI.getMeteo(villeChoisie); // ici, data est déjà les données JSON\n      console.log('Donnée météo reçue:', data);\n      setMeteo(data);\n    } catch (e) {\n      toast.error(\"Erreur lors de la récupération de la météo ❌\");\n    }\n    setLoading(false);\n  };\n  const handleVilleChange = e => {\n    setVille(e.target.value);\n  };\n  const handleVilleSubmit = e => {\n    e.preventDefault();\n    fetchMeteo(ville);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meteo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"M\\xE9t\\xE9o & Planning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVilleSubmit,\n      className: \"ville-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ville,\n        onChange: handleVilleChange,\n        placeholder: \"Entrez une ville\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Rechercher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement m\\xE9t\\xE9o...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this) : meteo && meteo.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meteo-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: meteo.city || ville\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Condition :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }, this), \" \", ((_meteo$weather = meteo.weather) === null || _meteo$weather === void 0 ? void 0 : _meteo$weather.description) || 'Non spécifié']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Temp\\xE9rature :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 8\n        }, this), \" \", (_meteo$weather2 = meteo.weather) === null || _meteo$weather2 === void 0 ? void 0 : _meteo$weather2.temperature, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Humidit\\xE9 :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 8\n        }, this), \" \", (_meteo$weather3 = meteo.weather) === null || _meteo$weather3 === void 0 ? void 0 : _meteo$weather3.humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Vent :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this), \" \", (_meteo$weather4 = meteo.weather) === null || _meteo$weather4 === void 0 ? void 0 : _meteo$weather4.wind_speed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"M\\xE9t\\xE9o non disponible.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Planning de la journ\\xE9e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Consultez le planning des travaux pour la journ\\xE9e en cours.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(MeteoPlanning, \"WdfiLzc1k/NU7/mPdBp8mfezhwA=\");\n_c = MeteoPlanning;\nvar _c;\n$RefreshReg$(_c, \"MeteoPlanning\");","map":{"version":3,"names":["React","useEffect","useState","chefChantierAPI","toast","jsxDEV","_jsxDEV","MeteoPlanning","_s","_meteo$weather","_meteo$weather2","_meteo$weather3","_meteo$weather4","ville","setVille","meteo","setMeteo","loading","setLoading","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","fetchVilleParCoordonnees","warn","fetchMeteo","lat","lon","_data$address","_data$address2","res","fetch","data","json","villeDetectee","address","city","town","err","error","villeChoisie","getMeteo","console","log","e","handleVilleChange","target","value","handleVilleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","type","success","weather","description","temperature","humidity","wind_speed","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Hackathon/eTabax/frontend/src/components/Dashboard/ChefChantier/MeteoPlanning.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport chefChantierAPI from '../../../api/chefChantier';\r\nimport './MeteoPlanning.css'; // Tu peux le créer pour un peu de style\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function MeteoPlanning() {\r\n  const [ville, setVille] = useState('Dakar');\r\n  const [meteo, setMeteo] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Obtenir la position de l'utilisateur au démarrage\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(async (pos) => {\r\n        const { latitude, longitude } = pos.coords;\r\n        fetchVilleParCoordonnees(latitude, longitude);\r\n      }, () => {\r\n        toast.warn(\"Impossible d'accéder à la localisation. Ville par défaut : Dakar\");\r\n        fetchMeteo('Dakar');\r\n      });\r\n    } else {\r\n      toast.warn(\"Géolocalisation non supportée. Ville par défaut : Dakar\");\r\n      fetchMeteo('Dakar');\r\n    }\r\n  }, []);\r\n\r\n  const fetchVilleParCoordonnees = async (lat, lon) => {\r\n    try {\r\n      // Appel à une API tierce pour convertir coord => ville\r\n      const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`);\r\n      const data = await res.json();\r\n      const villeDetectee = data?.address?.city || data?.address?.town || 'Dakar';\r\n      setVille(villeDetectee);\r\n      fetchMeteo(villeDetectee);\r\n    } catch (err) {\r\n      toast.error(\"Erreur localisation. Ville par défaut utilisée.\");\r\n      fetchMeteo('Dakar');\r\n    }\r\n  };\r\n\r\n    const fetchMeteo = async (villeChoisie) => {\r\n    setLoading(true);\r\n    try {\r\n        const data = await chefChantierAPI.getMeteo(villeChoisie); // ici, data est déjà les données JSON\r\n        console.log('Donnée météo reçue:', data);\r\n        setMeteo(data);\r\n    } catch (e) {\r\n        toast.error(\"Erreur lors de la récupération de la météo ❌\");\r\n    }\r\n    setLoading(false);\r\n    };\r\n\r\n  const handleVilleChange = (e) => {\r\n    setVille(e.target.value);\r\n  };\r\n\r\n  const handleVilleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchMeteo(ville);\r\n  };\r\n\r\n  return (\r\n    <div className=\"meteo-container\">\r\n      <h2>Météo & Planning</h2>\r\n\r\n      <form onSubmit={handleVilleSubmit} className=\"ville-form\">\r\n        <input value={ville} onChange={handleVilleChange} placeholder=\"Entrez une ville\" />\r\n        <button type=\"submit\">Rechercher</button>\r\n      </form>\r\n\r\n      {loading ? (\r\n  <p>Chargement météo...</p>\r\n) : (meteo && meteo.success) ? (\r\n  <div className=\"meteo-box\">\r\n    <h3>{meteo.city || ville}</h3>\r\n    <p><strong>Condition :</strong> {meteo.weather?.description || 'Non spécifié'}</p>\r\n    <p><strong>Température :</strong> {meteo.weather?.temperature} °C</p>\r\n    <p><strong>Humidité :</strong> {meteo.weather?.humidity} %</p>\r\n    <p><strong>Vent :</strong> {meteo.weather?.wind_speed} km/h</p>\r\n  </div>\r\n) : (\r\n  <p>Météo non disponible.</p>\r\n)}\r\n        <div className=\"planning-container\">\r\n            <h3>Planning de la journée</h3>\r\n            <p>Consultez le planning des travaux pour la journée en cours.</p>\r\n            {/* Ici tu peux intégrer un composant ou une liste de tâches */}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}