{"ast":null,"code":"import api from './config';\n\n// Configuration des endpoints fournisseur\nconst FOURNISSEUR_API = {\n  // Produits\n  PRODUCTS: '/fournisseur/products',\n  PRODUCT: id => `/fournisseur/products/${id}`,\n  // Commandes\n  ORDERS: '/fournisseur/orders',\n  ORDER_STATUS: id => `/fournisseur/orders/${id}/status`,\n  // Statistiques\n  STATS: '/fournisseur/stats'\n};\n\n/**\n * API Fournisseur - Gestion des produits\n */\n\n// Récupérer tous les produits du fournisseur\nexport const getFournisseurProducts = async () => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.PRODUCTS);\n    return response;\n  } catch (error) {\n    console.error('Erreur récupération produits fournisseur:', error);\n    throw error;\n  }\n};\n\n// Récupérer un produit spécifique\nexport const getFournisseurProduct = async productId => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.PRODUCT(productId));\n    return response;\n  } catch (error) {\n    console.error('Erreur récupération produit fournisseur:', error);\n    throw error;\n  }\n};\n\n// Créer un nouveau produit\nexport const createFournisseurProduct = async productData => {\n  try {\n    const response = await api.post(FOURNISSEUR_API.PRODUCTS, productData);\n    return response;\n  } catch (error) {\n    console.error('Erreur création produit fournisseur:', error);\n    throw error;\n  }\n};\n\n// Mettre à jour un produit\nexport const updateFournisseurProduct = async (productId, productData) => {\n  try {\n    const response = await api.put(FOURNISSEUR_API.PRODUCT(productId), productData);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur mise à jour produit fournisseur:', error);\n    throw error;\n  }\n};\n\n// Supprimer un produit\nexport const deleteFournisseurProduct = async productId => {\n  try {\n    const response = await api.delete(FOURNISSEUR_API.PRODUCT(productId));\n    return response.data;\n  } catch (error) {\n    console.error('Erreur suppression produit fournisseur:', error);\n    throw error;\n  }\n};\n\n/**\n * API Fournisseur - Gestion des commandes\n */\n\n// Récupérer toutes les commandes du fournisseur\nexport const getFournisseurOrders = async () => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.ORDERS);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur récupération commandes fournisseur:', error);\n    throw error;\n  }\n};\n\n// Mettre à jour le statut d'une commande\nexport const updateFournisseurOrderStatus = async (orderId, status) => {\n  try {\n    const response = await api.put(FOURNISSEUR_API.ORDER_STATUS(orderId), {\n      statut: status\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur mise à jour statut commande fournisseur:', error);\n    throw error;\n  }\n};\n\n/**\n * API Fournisseur - Statistiques\n */\n\n// Récupérer les statistiques du fournisseur\nexport const getFournisseurStats = async () => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.STATS);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur récupération statistiques fournisseur:', error);\n    throw error;\n  }\n};\n\n/**\n * Utilitaires pour les produits\n */\n\n// Catégories de produits disponibles\nexport const PRODUCT_CATEGORIES = [{\n  value: 'ciment',\n  label: 'Ciment'\n}, {\n  value: 'outils',\n  label: 'Outils'\n}, {\n  value: 'equipements-securite',\n  label: 'Équipements de Sécurité'\n}, {\n  value: 'materiaux-construction',\n  label: 'Matériaux de Construction'\n}, {\n  value: 'machines',\n  label: 'Machines'\n}, {\n  value: 'autres',\n  label: 'Autres'\n}];\n\n// Statuts de produits disponibles\nexport const PRODUCT_STATUS = [{\n  value: 'actif',\n  label: 'Actif'\n}, {\n  value: 'inactif',\n  label: 'Inactif'\n}, {\n  value: 'rupture',\n  label: 'Rupture de Stock'\n}];\n\n// Statuts de commandes disponibles\nexport const ORDER_STATUS = [{\n  value: 'en-attente',\n  label: 'En Attente'\n}, {\n  value: 'confirmee',\n  label: 'Confirmée'\n}, {\n  value: 'en-preparation',\n  label: 'En Préparation'\n}, {\n  value: 'expediee',\n  label: 'Expédiée'\n}, {\n  value: 'livree',\n  label: 'Livrée'\n}, {\n  value: 'annulee',\n  label: 'Annulée'\n}];\n\n// Fonction pour formater le prix\nexport const formatPrice = price => {\n  return new Intl.NumberFormat('fr-FR', {\n    style: 'currency',\n    currency: 'XOF'\n  }).format(price);\n};\n\n// Fonction pour obtenir le label d'une catégorie\nexport const getCategoryLabel = categoryValue => {\n  const category = PRODUCT_CATEGORIES.find(cat => cat.value === categoryValue);\n  return category ? category.label : categoryValue;\n};\n\n// Fonction pour obtenir le label d'un statut de produit\nexport const getProductStatusLabel = statusValue => {\n  const status = PRODUCT_STATUS.find(st => st.value === statusValue);\n  return status ? status.label : statusValue;\n};\n\n// Fonction pour obtenir le label d'un statut de commande\nexport const getOrderStatusLabel = statusValue => {\n  const status = ORDER_STATUS.find(st => st.value === statusValue);\n  return status ? status.label : statusValue;\n};","map":{"version":3,"names":["api","FOURNISSEUR_API","PRODUCTS","PRODUCT","id","ORDERS","ORDER_STATUS","STATS","getFournisseurProducts","response","get","error","console","getFournisseurProduct","productId","createFournisseurProduct","productData","post","updateFournisseurProduct","put","data","deleteFournisseurProduct","delete","getFournisseurOrders","updateFournisseurOrderStatus","orderId","status","statut","getFournisseurStats","PRODUCT_CATEGORIES","value","label","PRODUCT_STATUS","formatPrice","price","Intl","NumberFormat","style","currency","format","getCategoryLabel","categoryValue","category","find","cat","getProductStatusLabel","statusValue","st","getOrderStatusLabel"],"sources":["C:/Users/LENOVO/Desktop/eTabax/frontend/src/api/fournisseur.js"],"sourcesContent":["import api from './config';\n\n// Configuration des endpoints fournisseur\nconst FOURNISSEUR_API = {\n  // Produits\n  PRODUCTS: '/fournisseur/products',\n  PRODUCT: (id) => `/fournisseur/products/${id}`,\n  \n  // Commandes\n  ORDERS: '/fournisseur/orders',\n  ORDER_STATUS: (id) => `/fournisseur/orders/${id}/status`,\n  \n  // Statistiques\n  STATS: '/fournisseur/stats'\n};\n\n/**\n * API Fournisseur - Gestion des produits\n */\n\n// Récupérer tous les produits du fournisseur\nexport const getFournisseurProducts = async () => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.PRODUCTS);\n    return response;\n  } catch (error) {\n    console.error('Erreur récupération produits fournisseur:', error);\n    throw error;\n  }\n};\n\n// Récupérer un produit spécifique\nexport const getFournisseurProduct = async (productId) => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.PRODUCT(productId));\n    return response;\n  } catch (error) {\n    console.error('Erreur récupération produit fournisseur:', error);\n    throw error;\n  }\n};\n\n// Créer un nouveau produit\nexport const createFournisseurProduct = async (productData) => {\n  try {\n    const response = await api.post(FOURNISSEUR_API.PRODUCTS, productData);\n    return response;\n  } catch (error) {\n    console.error('Erreur création produit fournisseur:', error);\n    throw error;\n  }\n};\n\n// Mettre à jour un produit\nexport const updateFournisseurProduct = async (productId, productData) => {\n  try {\n    const response = await api.put(FOURNISSEUR_API.PRODUCT(productId), productData);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur mise à jour produit fournisseur:', error);\n    throw error;\n  }\n};\n\n// Supprimer un produit\nexport const deleteFournisseurProduct = async (productId) => {\n  try {\n    const response = await api.delete(FOURNISSEUR_API.PRODUCT(productId));\n    return response.data;\n  } catch (error) {\n    console.error('Erreur suppression produit fournisseur:', error);\n    throw error;\n  }\n};\n\n/**\n * API Fournisseur - Gestion des commandes\n */\n\n// Récupérer toutes les commandes du fournisseur\nexport const getFournisseurOrders = async () => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.ORDERS);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur récupération commandes fournisseur:', error);\n    throw error;\n  }\n};\n\n// Mettre à jour le statut d'une commande\nexport const updateFournisseurOrderStatus = async (orderId, status) => {\n  try {\n    const response = await api.put(FOURNISSEUR_API.ORDER_STATUS(orderId), {\n      statut: status\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Erreur mise à jour statut commande fournisseur:', error);\n    throw error;\n  }\n};\n\n/**\n * API Fournisseur - Statistiques\n */\n\n// Récupérer les statistiques du fournisseur\nexport const getFournisseurStats = async () => {\n  try {\n    const response = await api.get(FOURNISSEUR_API.STATS);\n    return response.data;\n  } catch (error) {\n    console.error('Erreur récupération statistiques fournisseur:', error);\n    throw error;\n  }\n};\n\n/**\n * Utilitaires pour les produits\n */\n\n// Catégories de produits disponibles\nexport const PRODUCT_CATEGORIES = [\n  { value: 'ciment', label: 'Ciment' },\n  { value: 'outils', label: 'Outils' },\n  { value: 'equipements-securite', label: 'Équipements de Sécurité' },\n  { value: 'materiaux-construction', label: 'Matériaux de Construction' },\n  { value: 'machines', label: 'Machines' },\n  { value: 'autres', label: 'Autres' }\n];\n\n// Statuts de produits disponibles\nexport const PRODUCT_STATUS = [\n  { value: 'actif', label: 'Actif' },\n  { value: 'inactif', label: 'Inactif' },\n  { value: 'rupture', label: 'Rupture de Stock' }\n];\n\n// Statuts de commandes disponibles\nexport const ORDER_STATUS = [\n  { value: 'en-attente', label: 'En Attente' },\n  { value: 'confirmee', label: 'Confirmée' },\n  { value: 'en-preparation', label: 'En Préparation' },\n  { value: 'expediee', label: 'Expédiée' },\n  { value: 'livree', label: 'Livrée' },\n  { value: 'annulee', label: 'Annulée' }\n];\n\n// Fonction pour formater le prix\nexport const formatPrice = (price) => {\n  return new Intl.NumberFormat('fr-FR', {\n    style: 'currency',\n    currency: 'XOF'\n  }).format(price);\n};\n\n// Fonction pour obtenir le label d'une catégorie\nexport const getCategoryLabel = (categoryValue) => {\n  const category = PRODUCT_CATEGORIES.find(cat => cat.value === categoryValue);\n  return category ? category.label : categoryValue;\n};\n\n// Fonction pour obtenir le label d'un statut de produit\nexport const getProductStatusLabel = (statusValue) => {\n  const status = PRODUCT_STATUS.find(st => st.value === statusValue);\n  return status ? status.label : statusValue;\n};\n\n// Fonction pour obtenir le label d'un statut de commande\nexport const getOrderStatusLabel = (statusValue) => {\n  const status = ORDER_STATUS.find(st => st.value === statusValue);\n  return status ? status.label : statusValue;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}