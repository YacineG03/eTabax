{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Hackathon\\\\eTabax\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ChefChantier\\\\PointageOuvriers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport chefChantierAPI from '../../../api/chefChantier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PointageOuvriers() {\n  _s();\n  const [ouvriers, setOuvriers] = useState([]);\n  const [pointages, setPointages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Charger ouvriers et pointages\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const ouvriersRes = await chefChantierAPI.getOuvriers();\n      const pointagesRes = await chefChantierAPI.getPointages();\n      setOuvriers(ouvriersRes.ouvriers || []);\n      setPointages(pointagesRes.pointages || []);\n    } catch (e) {\n      // Gestion d'erreur simple\n      setOuvriers([]);\n      setPointages([]);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Pointer un ouvrier\n  const handlePointer = async ouvrierId => {\n    await chefChantierAPI.pointerOuvrier({\n      ouvrierId\n    });\n    fetchData();\n  };\n\n  // Vérifier si l'ouvrier est déjà pointé aujourd'hui\n  const isOuvrierPointe = ouvrierId => {\n    const today = new Date().toISOString().slice(0, 10);\n    return pointages.some(p => p.ouvrierId === ouvrierId && p.present && p.date && p.date.slice(0, 10) === today);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pointage des ouvriers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ouvriers.map(o => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [o.nom, \" (\", o.metier, \")\", ' ', isOuvrierPointe(o.id) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'green',\n            fontWeight: 'bold'\n          },\n          children: \"Pr\\xE9sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePointer(o.id),\n          children: \"Pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, o.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PointageOuvriers, \"vKGNY0Uhh4H6gb6N5RjrkGlU/jI=\");\n_c = PointageOuvriers;\nvar _c;\n$RefreshReg$(_c, \"PointageOuvriers\");","map":{"version":3,"names":["React","useEffect","useState","chefChantierAPI","jsxDEV","_jsxDEV","PointageOuvriers","_s","ouvriers","setOuvriers","pointages","setPointages","loading","setLoading","fetchData","ouvriersRes","getOuvriers","pointagesRes","getPointages","e","handlePointer","ouvrierId","pointerOuvrier","isOuvrierPointe","today","Date","toISOString","slice","some","p","present","date","children","fileName","_jsxFileName","lineNumber","columnNumber","map","o","nom","metier","id","style","color","fontWeight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Hackathon/eTabax/frontend/src/components/Dashboard/ChefChantier/PointageOuvriers.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport chefChantierAPI from '../../../api/chefChantier';\r\n\r\nexport default function PointageOuvriers() {\r\n  const [ouvriers, setOuvriers] = useState([]);\r\n  const [pointages, setPointages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Charger ouvriers et pointages\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const ouvriersRes = await chefChantierAPI.getOuvriers();\r\n      const pointagesRes = await chefChantierAPI.getPointages();\r\n      setOuvriers(ouvriersRes.ouvriers || []);\r\n      setPointages(pointagesRes.pointages || []);\r\n    } catch (e) {\r\n      // Gestion d'erreur simple\r\n      setOuvriers([]);\r\n      setPointages([]);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Pointer un ouvrier\r\n  const handlePointer = async (ouvrierId) => {\r\n    await chefChantierAPI.pointerOuvrier({ ouvrierId });\r\n    fetchData();\r\n  };\r\n\r\n  // Vérifier si l'ouvrier est déjà pointé aujourd'hui\r\n  const isOuvrierPointe = (ouvrierId) => {\r\n    const today = new Date().toISOString().slice(0, 10);\r\n    return pointages.some(\r\n      (p) =>\r\n        p.ouvrierId === ouvrierId &&\r\n        p.present &&\r\n        p.date &&\r\n        p.date.slice(0, 10) === today\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Pointage des ouvriers</h3>\r\n      {loading && <div>Chargement...</div>}\r\n      <ul>\r\n        {ouvriers.map((o) => (\r\n          <li key={o.id}>\r\n            {o.nom} ({o.metier}){' '}\r\n            {isOuvrierPointe(o.id) ? (\r\n              <span style={{ color: 'green', fontWeight: 'bold' }}>Présent</span>\r\n            ) : (\r\n              <button onClick={() => handlePointer(o.id)}>Pointer</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}